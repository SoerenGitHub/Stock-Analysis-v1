version: "3.9"
services:
  database:
    image: mysql:5.7
    container_name: database
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./data/db:/var/lib/mysql



  data-layer-dev:
    container_name: data-layer-dev
    image: nestjs-api-dev:1.0.0
    build:
      context: ./data-layer
      dockerfile: Dockerfile
      target: development
    command: npm run start:debug
    environment:
      DATA_LAYER_PORT: ${DATA_LAYER_PORT}
      DATABASE_TYPE: ${DATABASE_TYPE}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}        
    ports:
      - 3000:3000
      - 9229:9229
    depends_on:
      - database
      - logic-layer-dev
    volumes:
      - ./data-layer:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
  data-layer-prod:
      container_name: data-layer-prod
      image: nestjs-api-prod:1.0.0
      build:
          context: ./data-layer
          target: production
          dockerfile: Dockerfile
      command: npm run start:prod
      environment:
        DATA_LAYER_PORT: ${DATA_LAYER_PORT}
        DATABASE_TYPE: ${DATABASE_TYPE}
        DATABASE_HOST: database
        DATABASE_PORT: ${DATABASE_PORT}
        DATABASE_USERNAME: ${DATABASE_USERNAME}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        DATABASE_NAME: ${DATABASE_NAME}
      ports:
        - 3000:3000
        - 9229:9229
      depends_on:
        - database
        - logic-layer-prod
      volumes:
        - ./data-layer:/usr/src/app
        - /usr/src/app/node_modules
      restart: unless-stopped



#TODO: solve bug
  logic-layer-dev:
    container_name: logic-layer-dev
    build:
      context: ./logic-layer
      dockerfile: Dockerfile
    environment:
      FLASK_ENV: development
      FLASK_APP: ${FLASK_APP}
      FLASK_RUN_HOST: ${FLASK_RUN_HOST}
    ports:
      - "8000:5000"
    volumes:
      - ./logic-layer:/code

  logic-layer-prod:
    container_name: logic-layer-prod
    build:
      context: ./logic-layer
      dockerfile: Dockerfile
    environment:
      FLASK_ENV: production
      FLASK_APP: ${FLASK_APP}
      FLASK_RUN_HOST: ${FLASK_RUN_HOST}
    ports:
      - "8000:5000"
    volumes:
      - ./logic-layer:/code

  presentation-layer-prod:
    container_name: presentation_layer-prod
    build: 
      context: ./presentation-layer
      dockerfile: Dockerfile
    volumes:
        - './presentation-layer:/usr/src/app'
    ports: 
      - 8080:80
    depends_on:
      - data-layer-prod